name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, staging, dev]
  push:
    branches: [main, staging, dev]

env:
  NODE_VERSION: '20'
  NPM_CACHE_FOLDER: ~/.npm
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Parallel jobs for faster execution
  type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint:strict

      - name: Format check
        run: npm run format:check

  build:
    runs-on: ubuntu-latest
    needs: [type-check, lint-and-format]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Build verification
        run: |
          # Verify that the build output exists
          if [ ! -d ".next" ]; then
            echo "❌ Build failed: .next directory not found"
            exit 1
          fi

          # Check if build artifacts are present
          if [ ! -f ".next/BUILD_ID" ]; then
            echo "❌ Build failed: BUILD_ID not found"
            exit 1
          fi

          # Check build size (optional)
          BUILD_SIZE=$(du -sh .next | cut -f1)
          echo "✅ Build successful! Size: $BUILD_SIZE"

      - name: Upload build artifacts (optional)
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-artifacts
          path: .next/
          retention-days: 1

  # Combined job for branch protection (this is what GitHub will check)
  build-and-test:
    runs-on: ubuntu-latest
    needs: [type-check, lint-and-format, build]
    steps:
      - name: All checks passed
        run: |
          echo "✅ All CI checks have passed!"
          echo "Type checking: ✅"
          echo "Linting and formatting: ✅"
          echo "Build: ✅"
          echo "Ready for merge!"

  # Optional: Add a job for running tests if you have them
  # test:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20'
  #       cache: 'npm'
  #
  #   - name: Install dependencies
  #     run: npm ci
  #
  #   - name: Run tests
  #     run: npm test
